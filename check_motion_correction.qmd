---
title: "Check Motion Removal"
author: "Rob Day"
format: html
---

This project is to check that motion removal by subtracting the (u, v, w) 
components of each more proximal marker give the right result.

Check it by comparing the (u, v, w) generated by subtraction with those from
the VIC-3D rigid motion option.

## setup

Load any needed libraries and define some constants.

```{r}
#| label: setup
#| warning: false
#| message: false

library(dplyr) # for manipulating dataframes
library(ggplot2) # for plotting

#library(segmented) # for segmented fits

# If you don't have bluer install it with 
# install.packages("devtools")
# devtools::install_github(repo = "yadbor/bluer")
library(bluer) # routines for analysing mechanical test data

cleaned_file <- "cadaver_all_results.csv"
cycles_file <- "cadaver_cycles.csv"

```

## read the data files

Use the code below to read all of the .csv files output from VIC-3D.
```{r}
#| label: read_raw_files

data_root <- here::here("data-raw", "cadaver_csv_files")

raw_files = list.files(path = data_root,
                       pattern = "csv$",
                       recursive = TRUE,
                       full.names = TRUE,
                       ignore.case = TRUE
                       )
raw_files <- raw_files |>
  stringr::str_subset(pattern = "(?i)Marker_Data") # Case insensitive match needed
```

This time keep only the results that did not have rigid motion removed.

```{r}
# Some tests were analysed without removing rigid motion of the radius marker,
# to check that motion reduction was working as anticipated.
# Remove these from the list of files to analyse.

raw_files <- raw_files |>
  stringr::str_subset(pattern = "(?i)MOTION", negate = FALSE)

# Name the vector with the filename, which bind_rows will turn into a column
names(raw_files) <- basename(raw_files)

# Map the function read_csv() across all elements in raw_files, then bind the resulting dataframes
# rowwise into a combined dataframe, putting the names from raw_files into a column "filename".
motion_results <- raw_files |>
  purrr::map(\(f) readr::read_csv(file = f, show_col_types = FALSE)) |>
  bind_rows(.id = "filename") |>
  # clean up and simplify names
  rename(frame = "File Number", time = "Time_1") |>
  rename_with(~ stringr::str_remove(.x, "\\s*\\[.+\\]") |> stringr::str_to_lower()) |>
  dplyr::select(-"time_0") |> # Don;t need two time columns
  # fix the spelling of parts of the filename
  # First fix a known typo
  mutate(filename = stringr::str_replace(filename, "(?i)poximal", "proximal")) |>
  # Then make the marker labels all lower case
  mutate(filename = stringr::str_replace(filename, "(?i)distal", "distal")) |>
  mutate(filename = stringr::str_replace(filename, "(?i)proximal", "proximal"))
```

```{r}
#| label: parse_filenames

motion_results <- motion_results |>
  mutate(filename =  stringr::str_remove(filename, "-.+")) |> tidyr::separate_wider_delim(
    filename,
    "_",
    names = c("id", "arm", "plate", "marker"),
    cols_remove = FALSE
  ) |> mutate(
    arm = stringr::str_to_upper(arm),
    plate = stringr::str_to_upper(stringr::str_sub(plate, -1)),
    marker = stringr::str_to_lower(marker)
  )
```

Check that the filenames have parsed to something sensible
```{r}
#| label: check_parsed

motion_results |> dplyr::select(id:marker) |> purrr::map( \(c) unique(c))
```

Load the precleaned results from the motion corrected studies.
```{r}
#| label: read_cleaned_data
all_results <- readr::read_csv(file = here::here("data", cleaned_file), 
                               show_col_types = FALSE)

```

Now subtract the radius (u, v, w) motions from both the distal and proximal
markers.
This makes heavy use of pivoting from rows to columns and back.
```{r}

## Original crude version
# radius_removed <- motion_results |> 
#   select(id:marker, frame, u:w) |> 
#   tidyr::pivot_wider(
#     id_cols = c(id, arm, plate, frame),
#     values_from = c(u, v, w),
#     values_fn = first,
#     names_from = marker,
#     names_sep = "_"
#   ) |> 
#   mutate(
#     across(c(u_distal, u_proximal), ~ .x - u_radius, .names = "d.{.col}"),
#     across(c(v_distal, v_proximal), ~ .x - v_radius, .names = "d.{.col}"),
#     across(c(w_distal, w_proximal), ~ .x - w_radius, .names = "d.{.col}")
#   ) |> 
#   select(id:frame, starts_with("d.")) |> 
#   tidyr::pivot_longer(starts_with("d.")) |> 
#   tidyr::separate_wider_delim(name, delim = "_", names = c("axis", "marker")) |>
#   tidyr::pivot_wider(names_from = axis, values_from = value) |> 
#   ungroup() |> 
#   group_by(id, arm, plate, marker, frame) |> 
#   arrange(id, arm, plate, marker, frame)

radius_removed <- motion_results |>
  select(id:marker, frame, u:w) |> 
  tidyr::pivot_longer(cols = c(u, v, w), names_to = "axis") |> 
  tidyr::pivot_wider(
    id_cols = c(id, arm, plate, frame, axis),
    names_from = marker,
  ) |> 
  mutate(across(distal:proximal, ~ .x - radius)) |> 
  select(-radius) |> 
  tidyr::pivot_longer(distal:proximal, names_to = "marker") |>
  tidyr::pivot_wider(names_from = axis) |> 
  group_by(id, arm, plate, marker, frame) |> 
  arrange(.by_group = TRUE)

combined <- all_results |>
  select(id:frame, u, v, w) |>
  right_join(radius_removed, 
            by = join_by(id, arm, plate, frame, marker), 
            suffix = c(".vic", ".manual")
            ) |>
  tidyr::pivot_longer(cols = contains("."), 
                      names_to =c("axis", "process"), 
                      names_sep = "\\.") |>
  tidyr::pivot_wider(names_from = "process")

combined |>
  ggplot() + 
  aes(x = vic, y = manual) +
  geom_point(alpha = 0.5) +
  geom_abline(slope = 1, intercept = 0, colour = "red", linetype = "dashed", linewidth = 0.5) +
  facet_wrap(~axis, scales = "free") +
  labs(title = "manual motion removal vs VIC-3D", 
       x = "VIC-3D motion removal (mm)",
       y = "manual motion removal (mm)")

```

Check the correlations numerically:
```{r}
combined |> 
  group_by(axis) |> 
  summarise(spearman = cor(vic, manual, method = "spearman"))
```

Close enough for Government work.

Look as the differences between the methods for each point.

```{r}
combined |>
  mutate(err = vic - manual) |>
  ggplot() + 
  aes(x = frame, y = err, colour = id) +
  geom_point(alpha = 0.5, size = 0.5) +
  facet_grid(marker ~ axis) +
  labs(title = "manual motion removal vs VIC-3D", 
       y = "error = vic - manual (mm)")

```
```{r}
error_summary <- combined |>
  mutate(error = vic - manual) |>
  group_by(id, axis) |>
  summarise(fivenum = list(fivenum(error) |> 
                             setNames(c("min", "Q1", "median", "Q3", "max"))
                           )
            ) 
error_summary |>
  tidyr::unnest_wider(fivenum)
```
```{r}
#| echo: false
#| output: false
error_max <- error_summary |> 
  tidyr::unnest_longer(fivenum) |> 
  mutate(abs_err = abs(fivenum)) |> 
  summarise(max_error = max(abs_err))

error_max
```

Again, there is very good agreement between the methods, 
with the largest absolute error being `r max(error_max$max_error)`
for these tests.